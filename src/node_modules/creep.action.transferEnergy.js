const ActionNode = require('tree.node.action')

class TransferEnergy extends ActionNode {
  tick (context) {
    var creep = context.actor
    var memory = this.getNodeMemory(context)

    var target

    // Check memory if we already have a target
    if (memory.target) {
      target = Game.getObjectById(memory.target)

      // When target got filled up already, we need a new target
      if (target.energy === target.energyCapacity) {
        this.log(context, 'Last target is at capacity.')
        target = null
      }
    }

    if (!target) {
      this.log(context, 'Find a structure that has available capacity')
      target = creep.pos.findClosestByPath(FIND_MY_STRUCTURES, {
        filter: structure => structure.structureType === this.params.type &&
        structure.energy < structure.energyCapacity
      })
    }

    if (!target) {
      this.log(context, 'Nothing to do if there are no such structures.')
      return FAILURE
    }

    memory.target = target.id

    if (creep.transfer(target, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {
      creep.moveTo(target)
    }

    return RUNNING
  }
}

module.exports = TransferEnergy
