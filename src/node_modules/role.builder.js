module.exports = {
  /** @param {Creep} creep **/
  run: function (creep) {

    if (creep.memory.building && creep.carry.energy === 0) {
      creep.memory.building = false;
    }
    if (!creep.memory.building && creep.carry.energy === creep.carryCapacity) {
      creep.memory.building = true;
    }

    if (creep.memory.building) {
      var target = creep.pos.findClosestByRange(FIND_CONSTRUCTION_SITES);
      if (target) {
        if (creep.build(target) === ERR_NOT_IN_RANGE) {
          creep.moveTo(target);
        }
      } else {
        var repairTargets = creep.room.find(FIND_STRUCTURES, {
              filter: object => object.hits < object.hitsMax && object.room === creep.room
      });

      repairTargets.sort((a, b) => a.hits - b.hits);

      if (repairTargets.length > 0) {
        if (creep.repair(repairTargets[0]) === ERR_NOT_IN_RANGE) {
          creep.moveTo(repairTargets[0]);
        }
      }
    }
  } else {
    //todo: move to creepKeeper... or better get charged at source or other storage
    var source = creep.pos.findClosestByRange(FIND_SOURCES,{energy__gt:1000});
if (!source) {
  source = creep.pos.findClosestByPath(FIND_SOURCES,{energy__gt:1000});
}
}

}
};
