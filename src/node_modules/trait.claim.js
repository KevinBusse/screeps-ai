var filters = require('filters')

/**
 * Claim trait - will look for a flag named NextRoom
 *
 * @param {Creep} creep
 * @returns {boolean}
 */
module.exports = (creep) => {
  var moveStatus

  // When no such flag exists, skip trait.
  if (typeof Game.flags.NextRoom === 'undefined') {
    return false
  }

  /** @var {Flag} flag */
  var flag = Game.flags.NextRoom

  // Make sure we are in the same room, when not move there
  if (!filters.sameRoom(creep, flag)) {
    moveStatus = creep.moveTo(flag)
    return (moveStatus === OK) || (moveStatus = ERR_TIRED)
  }

  switch (creep.claimController(creep.room.controller)) {
    // When not in range try to move closer.
    case ERR_NOT_IN_RANGE:
      moveStatus = creep.moveTo(creep.room.controller)
      return (moveStatus === OK) || (moveStatus = ERR_TIRED)
    // Creep is claiming.
    case OK:
      return true
    // Something other error, so we didn't assign a task after all.
    default:
      return false
  }
}
