// const job = {
//   type: 'harvest',
//   creep: 'creepname',
//   flag: 'flagname',
//   source: 'objectId',
//   transfer: 'objectId'
// }

module.exports = {
  getCreepBody: (room, job) => {
    let energyAvailable = room.energyAvailable
    energyAvailable -= BODYPART_COST[MOVE]
    var body = [MOVE]

    if (job.transfer) {
      energyAvailable -= BODYPART_COST[CARRY]
      body.unshift(CARRY)
    }

    energyAvailable -= BODYPART_COST[WORK]
    body.unshift(WORK)
    if (job.home) {
      for (let i = Math.min(2, energyAvailable / (BODYPART_COST[WORK] + BODYPART_COST[MOVE])); i >= 1; i--) {
        body.unshift(WORK)
        body.push(MOVE)
      }
    } else {
      for (let i = Math.min(5, energyAvailable / BODYPART_COST[WORK]); i >= 1; i--) {
        body.unshift(WORK)
      }
    }
    return body
  },
  execute: (creep, job) => {
    var position = Game.flags[job.flag].pos
    var source
    if (creep.memory.source) {
      source = Game.getObjectById(creep.memory.source)
    } else {
      source = creep.pos.findInRange(FIND_SOURCES, 1)
      if (source.length > 0) {
        source = source[0]
        creep.memory.source = source.id
      }
    }

    creep.memory.source = source.id

    // console.log(`${creep.name} is ${creep.memory.job.type}ing ${job.source} from ${position.roomName} ${position.x}, ${position.y} ${job.flag}`)

    if (creep.pos.x !== position.x || creep.pos.y !== position.y || creep.pos.roomName !== position.roomName) {
      creep.moveTo(position)
      return
    }

    if (creep.carryCapacity > 0 && job.transfer && creep.carry[RESOURCE_ENERGY] === creep.carryCapacity) {
      const transferTarget = Game.getObjectById(job.transfer)
      if (transferTarget && transferTarget.energy < transferTarget.energyCapacity) {
        creep.transfer(
          transferTarget,
          RESOURCE_ENERGY,
          Math.min(
            creep.carryCapacity,
            transferTarget.energyCapacity - transferTarget.energy
          )
        )
      }
    }

    creep.harvest(source)
  }
}
