const CompositeNode = require('tree.node.composite')

/**
 * Parallel
 *
 * This composite pattern describes child nodes that are processed concurrently. In this scenario,
 * Imagine we want our AI monster to scream and chase the player at the same time rather than one
 * after the other.
 */
class Parallel extends CompositeNode {
  tick (context) {
    // TODO: implement correctly
    var status = SUCCESS
    this.nodes.forEach((node) => {
      this.log(context, `Executing ${node.id}`)
      var nodeStatus = node.execute(context)
      this.log(context, `Executing ${node.id} --> ${nodeStatus}`)
    })
    return status
  }
}

module.exports = Parallel
