module.exports = {
  /** @param {Creep} creep **/
  run: function (creep) {
    if (creep.carry.energy < creep.carryCapacity) {
      var source = creep.pos.findClosestByRange(FIND_SOURCES);
      if (creep.harvest(source) === ERR_NOT_IN_RANGE) {
        creep.moveTo(source);
      }
    } else {
      var targets = creep.room.find(FIND_STRUCTURES, {
        filter: (structure) => {
          return (structure.structureType === STRUCTURE_EXTENSION ||
            structure.structureType === STRUCTURE_SPAWN ||
            structure.structureType === STRUCTURE_TOWER) && structure.energy < structure.energyCapacity;
        }
      });
      if (targets.length > 0) {
        var target = creep.pos.findClosestByRange(targets);
        if (creep.transfer(target, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {
          creep.moveTo(target);
        }
      } else {
        var repairTargets = creep.room.find(FIND_STRUCTURES, {
          filter: object => object.hits < object.hitsMax && object.room === creep.room
        });

        repairTargets.sort((a, b) => a.hits - b.hits);

        if (repairTargets.length > 0) {
          if (creep.repair(repairTargets[0]) === ERR_NOT_IN_RANGE) {
            creep.moveTo(repairTargets[0]);
          }
        }
      }
    }
  }
};