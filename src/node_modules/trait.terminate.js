/**
 * Terminate trait - will look for a flag named "Terminate
 *
 * @param {Creep} creep
 * @returns {boolean}
 */
module.exports = (creep) => {
  var MAX_ATTACK_RANGE = 3

  var position = creep.pos

  var targets
  targets = position.findInRange(FIND_HOSTILE_CREEPS, MAX_ATTACK_RANGE)
  if (targets.length > 2) {
    creep.rangedMassAttack()
    return true
  }

  targets = position.findInRange(FIND_HOSTILE_CREEPS, MAX_ATTACK_RANGE)
  if (targets.length > 0) {
    creep.rangedAttack(targets[0])
    return true
  }

  // TODO: add filter for attackable structures -> no so one attacks a room controller
  targets = position.findInRange(FIND_HOSTILE_STRUCTURES, 2)
  if (targets.length > 1) {
    creep.rangedMassAttack()
    return true
  }

  targets = position.findInRange(FIND_HOSTILE_STRUCTURES, 2)
  if (targets.length > 0) {
    creep.rangedAttack(targets[0])
    return true
  }

  if (typeof Game.flags.Terminate !== 'undefined') {
    /** @var {Flag} flag */
    var flag = Game.flags.Terminate
    if (creep.moveTo(flag) === OK) {
      return true
    }
  }

  return false
}
