/**
 * Harvest Trait
 * When the creep requires energy it will harvest it from a source.
 * 
 * @param {Creep} creep
 * @returns {boolean} whether a task was assigned or not
 */
module.exports = (creep) => {
  // Creeps without the ability to carry and work should be skipped
  if (creep.getActiveBodyParts(CARRY) === 0 || creep.getActiveBodyParts(WORK) === 0) {
    return false;
  }
  
  /** @var {Boolean} creep.memory.harvesting */
  if (typeof creep.memory.harvesting === 'undefined') {
    creep.memory.harvesting = true;
  }

  if (creep.carry.energy === 0) {
    creep.memory.harvesting = true;
  }

  if (creep.carry.energy === creep.carryCapacity) {
    creep.memory.harvesting = false;
  }
  
  if (!creep.memory.harvesting) {
    return false;
  }
  
  /** @var {RoomPosition} target */
  var targetPosition = creep.pos;
  if (typeof creep.memory.target !== 'undefined') {
    targetPosition = creep.memory.target;
  }

  var source = targetPosition.findClosestByRange(FIND_SOURCES);
  if (creep.harvest(source) === ERR_NOT_IN_RANGE) {
    creep.moveTo(source);
  }
  
  return true;
};
